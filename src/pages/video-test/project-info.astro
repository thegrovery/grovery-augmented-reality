---
/*========================================*/
/*	PAGE: Home/Index
		NOTES:	
*/
/*========================================*/

//Essential Components
import Layout from '@layouts/Layout.astro';

import QRCode from '@components/QRCode.astro';

const baseURL = "https://grovery-ar.netlify.app/grovery-holiday-ar";

---

<Layout 
	title="Grovery Holiday AR"
	heading="Grovery Holiday AR"
	marker="/markers/grovery-holiday-marker.png"
	qrcode="https://grovery-ar.netlify.app/grovery-holiday-ar?position=wall"
>

<section class="text">
	<h2>Definitions</h2>
	<ul>
		<li><strong>Marker</strong>: The image you print out and place in the real world to trigger the AR experience.</li>
		<ul>
			<li>Also referred to as a "marker image", an "anchor point" or a ""</li>
		</ul>
	</ul>


	<p>
		QR Codes: All Augmented Reality projects on here come with 3 pre-configured QR codes - they all open the same thing, but have different sizing, position, and orientation presets for the 3D model depending on the context of how you want to display it. You can switch the view mode inside the viewer by clicking the "Switch View" button, but using the correct QR code is the easiest way to ensure the correct settings are used.
	</p>

	
</section>

<div class="qr-grid">
	<div class="qr-cell">
		<div class="text-content">
			<h2>Wall Preset</h2>
			<ul>
				<li>Context: The marker is displayed on a flat vertical surface, such as a wall, computer screen, or a television.</li>
				<li>Behavior: The 3D model appears in front of the marker.</li>
			</ul>
		</div>
		<div class="qr-wrapper">
			<QRCode 
				id="wall-qrcode"
				link={`${baseURL}?position=wall`}
			/>
			<a href={`${baseURL}?position=wall`} target="_blank">{`${baseURL}?position=wall`}</a>
		</div>
	</div>

	<div class="qr-cell">
		<div class="text-content">
			<h2>Flat Preset</h2>
			<ul>
				<li>Context: The marker is laying on a flat horizontal surface such as a desk or table. Easy to use with the provided printout page.</li>
				<li>Behavior: The 3D model appears above the marker.</li>
			</ul>
		</div>
		<div class="qr-wrapper">
			<QRCode 
				id="flat-qrcode"
				link={`${baseURL}?position=flat`}
			/>
			<a href={`${baseURL}?position=flat`} target="_blank">{`${baseURL}?position=flat`}</a>
		</div>
	</div>

	<div class="qr-cell">
		<div class="text-content">
			<h2>Card Preset</h2>
			<ul>
				<li>Context: similar to the flat position, but the 3D model is sized and positioned to account for a smaller marker image. Depending on the 3D model, this may end up being the same as the Flat View settings.</li>
				<li>Behavior: The 3D model appears above the marker.</li>
			</ul>
		</div>
		<div class="qr-wrapper">
			<QRCode 
				id="default-qrcode"
				link={`${baseURL}?position=card`}
			/>
			<a href={`${baseURL}?position=card`} target="_blank">{`${baseURL}?position=card`}</a>
		</div>
	</div>
</div>

<div class="markerSection">
		
	<img src="/markers/grovery-holiday-marker-v2.jpg"/>
	
</div>



</Layout>


<style lang="scss">
	.markerSection{
		display: flex;
		justify-content: center;
		align-items: center;
		img{
			width: 100%;
			max-width: 85vh;
		}
	}


	.qr-grid {
		display: flex;
		flex-direction: column;
		justify-content: flex-start;
		align-items: flex-start;
		padding: 2rem;
	}

	.qr-cell {
		border: var(--border-settings-main);
		background-color: var(--background-color);
		width: 100%;
		display: flex;
		flex-direction: row;
		justify-content: flex-start;
		align-items: flex-start;
		margin-bottom: 2rem;
		
		
		.text-content {
			padding: 1rem;
			border-right: var(--border-settings-main);
			align-self: stretch;
			width: 50%;

			h2 {
				margin: 0 0 0.5rem 0;
				font-size: 1.5rem;
			}

			p {
				margin: 0;
				font-size: 1rem;
				line-height: 1.4;
			}
		}

		.qr-wrapper {
			padding: 2rem;
			width: 50%;
			display: flex;
			flex-direction: column;
			justify-content: center;
			align-items: center;
			align-self: stretch;

			a{
				font-size: 0.65rem;
				margin-top: 1rem;
				display: flex;
				flex-direction: row;
				justify-content: center;
				align-items: center;
				text-decoration: none;
				background-color: var(--accent-color);
				color: var(--background-color);
				padding: 0.5rem 1rem;
				&::before{
					content: "[";
					font-size: 1.5em;
					text-decoration: none;
				}
				&::after{
					content: "]";
					font-size: 1.5em;
				}
			}
		}
	}
</style>