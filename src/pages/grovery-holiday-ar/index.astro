---
//Components
import ARLayout from '@layouts/AR-Layout.astro';
import CustomUI from '@components/ARComponents/CustomUI.astro';

/*===== Main Settings =====*/
let defaultRotation = "wall"; // "flat" or "wall"
let markerFile = "/markers/grovery-holiday-marker-v2.mind";
let markerImage = "/markers/grovery-holiday-marker-v2.jpg";
let infoLink = "https://grovery-ar.netlify.app/grovery-holiday-ar/info";

/*===== Position Configurations =====*/
	let rotationSetting = "";
	let positionSetting = "";
	//Wall surface configuration - 
	let WallRotationSetting = "0 0 0";		//don't change
	let WallpositionSetting = "0 0 0.1";	//change as needed

	//Flat surface configuration
	let FlatRotationSetting = "90 0 0";		//don't change
	let FlatpositionSetting = "0 0 0.1";	//probably don't change

	//Card surface configuration
	let CardRotationSetting = "90 0 0";		//don't change
	let CardpositionSetting = "0 0 0.1";	//change as needed

/*===== Starting Rotation Settings =====*/
	if(defaultRotation == "flat"){
		rotationSetting = "90 0 0";
		positionSetting = "0 0 0.1";
	}else{
		rotationSetting = "0 0 0";
		positionSetting = "0 0 0.1";
	}

---

<ARLayout 
	title="AR_Test_1"
>

<div class="links">
	<a href={infoLink}>Project Info</a>
	<a href="/learn-more">Learn More</a>
</div>

<div class="controls">
	<div 
		class="controlButton" 
		data-control-button="wall"
	>
		Switch View: Wall
	</div>

	<div 
		class="controlButton" 
		data-control-button="flat"
	>
		Switch View: Flat
	</div>
</div>

<CustomUI/>

<a-scene 
	mindar-image={`imageTargetSrc: ${markerFile}; uiScanning: #custom-scanning-overlay;`}
	color-space="sRGB" 
	renderer="colorManagement: true, physicallyCorrectLights" 
	vr-mode-ui="false" 
	xr-mode-ui="enabled: false"
	device-orientation-permission-ui="enabled: false"
>
<a-assets>
	<!-- <img id="card" src="https://cdn.jsdelivr.net/gh/hiukim/mind-ar-js@1.2.5/examples/image-tracking/assets/card-example/card.png" /> -->
	<a-asset-item 
		id="displayModel" 
		src="/3d-objects/snowman/scene.gltf"
	></a-asset-item>
</a-assets>

<a-camera 
	position="0 0 0" 
	look-controls="enabled: false"
></a-camera>

<a-entity 
	mindar-image-target="targetIndex: 0"
>
	<a-entity
		id="objectWrapper"
		rotation={rotationSetting ? rotationSetting : "90 0 0"}
		position={positionSetting ? positionSetting : "0 0 0.1"}
		data-rotation-setting="flat"
		
		data-wall-position={WallpositionSetting}
		data-wall-rotation={WallRotationSetting}

		data-flat-position={FlatpositionSetting}
		data-flat-rotation={FlatRotationSetting}

		data-card-position={CardpositionSetting}
		data-card-rotation={CardRotationSetting}
	>
		<!-- <a-plane src="#card" position="0 0 0" height="0.552" width="1" rotation="0 0 0"></a-plane> -->
		<a-gltf-model 
			rotation="0 0 0" 
			position="0 0 0.1" 
			scale="0.5 0.5 0.5" 
			src="#displayModel"
			animation="property: rotation; to: 0 360 0; loop: true; dur: 10000; easing: linear;"
		/>
	</a-entity>
</a-entity>
</a-scene>

</ARLayout>


<style lang="scss">
	.controls{
		position: fixed;
		z-index: 500000;
		bottom: 5px;
		left: 50%;
		transform:translate(-50%, 0%);
		display: flex;
		justify-content: center;
		align-items: center;
		width: 100%;
		max-width: 500px;
		margin: auto;

		.controlButton{
			//width: 175px;
			margin: 0 10px;
			border: solid 2px #FFF;
			padding: 0.25em 0.5em;
			color: #FFF;
			font-size: var(--ar-font-size-1);
			text-align: center;
			display: none; // Hide buttons by default
		}

		// Show the appropriate button based on the current rotation setting
		&[data-current-rotation="wall"] .controlButton[data-control-button="flat"],
		&[data-current-rotation="flat"] .controlButton[data-control-button="wall"] {
			display: block;
		}
	}

	.links{
		position: fixed;
		z-index: 500000;
		top: 5px;
		left: 50%;
		transform:translate(-50%, 0%);
		display: flex;
		justify-content: center;
		align-items: center;
		width: 100%;
		max-width: 500px;
		margin: auto;

		a{
			//width: 175px;
			margin: 0 10px;
			border: solid 2px #FFF;
			padding: 0.25em 0.5em;
			color: #FFF;
			font-size: var(--ar-font-size-1);
			text-align: center;
		}
	}
</style>

